require "test_helper"

class HourTest < Minitest::Test
  test "returns time window for 1h" do
    {
      "2018-12-10T00:00:14+00:00" => "2018-12-10T00:00:00+00:00",
      "2018-12-10T01:01:38+00:00" => "2018-12-10T01:00:00+00:00",
      "2018-12-10T07:59:14+00:00" => "2018-12-10T07:00:00+00:00",
      "2018-12-10T14:27:58+00:00" => "2018-12-10T14:00:00+00:00",
      "2018-12-10T23:18:43+00:00" => "2018-12-10T23:00:00+00:00"
    }.each do |input, output|
      time_window = TimeWindow.call("1h", Time.parse(input))
      assert_equal output, time_window.iso8601
    end
  end

  test "returns time window for 2h" do
    {
      "2018-12-10T00:00:14+00:00" => "2018-12-10T00:00:00+00:00",
      "2018-12-10T01:01:38+00:00" => "2018-12-10T00:00:00+00:00",
      "2018-12-10T02:01:27+00:00" => "2018-12-10T02:00:00+00:00",
      "2018-12-10T07:59:35+00:00" => "2018-12-10T06:00:00+00:00",
      "2018-12-10T14:24:55+00:00" => "2018-12-10T14:00:00+00:00",
      "2018-12-10T23:48:02+00:00" => "2018-12-10T22:00:00+00:00"
    }.each do |input, output|
      time_window = TimeWindow.call("2h", Time.parse(input))
      assert_equal output, time_window.iso8601
    end
  end

  test "returns time window for 5h" do
    {
      "2018-12-10T00:00:14+00:00" => "2018-12-10T00:00:00+00:00",
      "2018-12-10T01:01:38+00:00" => "2018-12-10T00:00:00+00:00",
      "2018-12-10T05:01:27+00:00" => "2018-12-10T05:00:00+00:00",
      "2018-12-10T11:59:35+00:00" => "2018-12-10T10:00:00+00:00",
      "2018-12-10T14:24:55+00:00" => "2018-12-10T10:00:00+00:00",
      "2018-12-10T16:35:28+00:00" => "2018-12-10T15:00:00+00:00",
      "2018-12-10T23:48:02+00:00" => "2018-12-10T20:00:00+00:00"
    }.each do |input, output|
      time_window = TimeWindow.call("5h", Time.parse(input))
      assert_equal output, time_window.iso8601
    end
  end
end
